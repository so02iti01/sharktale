{"meta":{"title":"Sharktale","subtitle":"捅了一个鲨鱼窝'","description":"","author":"Yoozy","url":"http://blog.sharktale.xyz","root":"/"},"pages":[],"posts":[{"title":"Hexo blog建立与使用笔记","slug":"Hexo-blog建立与使用笔记","date":"2022-03-25T05:58:04.000Z","updated":"2022-03-25T06:55:26.744Z","comments":true,"path":"2022/03/25/Hexo-blog建立与使用笔记/","link":"","permalink":"http://blog.sharktale.xyz/2022/03/25/Hexo-blog%E5%BB%BA%E7%AB%8B%E4%B8%8E%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/","excerpt":"","text":"建立Hexo blog我在做下面这些之前，对这些都一无所知，过程磕磕绊绊，所以更加想要记录下来。 Hexo与模板的安装开始Hexo之前的一些必要安装 git node.js 配置GitHub Page先写使用GitHub自带的域名的步骤，如果要换成自己的域名，需要多进行一些写在后面的步骤。 使用Hexo blogHexo采用2个branch，一个 hexo命令： 1$ hexo &lt;command&gt; 如果输入不存在的command（比如：hexo -s），会显示出hexo相关命令的帮助。 生成一个名为的，新的markdown文件（位于\\source_posts\\）： 1$ hexo new &quot;&lt;filename&gt;&quot; 编译形成网页（使用http://localhost:4000/访问本地主机，即可看到效果） ： 1$ hexo s git命令多看git cheat sheet.pdf，外加多搜索 日常修改与版本控制 将Hexo配置推到remote的branch 123$ git add . $ git commit -m &quot;&lt;descriptive messgage&gt;&quot; $ git push origin Hexo # 将本地branch的内容全部上传到与之关联的remote branch 说明： $ git add Snapshots the file in preparation for versioning $ git commit -m ““ Records file snapshots permanently in version history $ git push upload all local branch commits to GitHub git an open source, distributed version-control system commit a Git object, a snapshot of your entire repository compressed into a SHA 把文章推到master分支 1$ hexo g -d $ hexo g Generate static files, options: Command Description -b 或者 –bail Raise an error if any unhandled exception is thrown during generation -c 或者 –concurrency Maximum number of files to be generated in parallel. Default is infinity -d 或者 –deploy Deploy after generated -f 或者–force Force regenerate -w 或者–watch Watch file changes 参考资料： [1] Barrel Titor, 用 Hexo 和 GitHub Page 搭建静态博客, 知乎. (最后一次获取时间：2022-03-25)","categories":[],"tags":[{"name":"Hexo;git","slug":"Hexo-git","permalink":"http://blog.sharktale.xyz/tags/Hexo-git/"}]},{"title":"FFT analyzer结果输出为figure","slug":"FFTAnalyzer2Figure","date":"2022-03-21T07:25:42.000Z","updated":"2022-03-21T09:45:05.443Z","comments":true,"path":"2022/03/21/FFTAnalyzer2Figure/","link":"","permalink":"http://blog.sharktale.xyz/2022/03/21/FFTAnalyzer2Figure/","excerpt":"","text":"%% This script exports the FFT analysis data from the Powergui FFT Analysis Tool to the base workspace % &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; Before running it, do remember to update FFT analyzer in Simulink&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; % ——-Get initial default structure: 1FFTDATA = power_fftscope(ScopeData); % Variable name may change sometimes % ——-Modify FFTDATA structure to have desired options and settings 12345FFTDATA.cycles = 1;FFTDATA.fundamental = 50; FFTDATA.maxFrequency = 20000; % ——-Update the data structure 1FFTDATA = power_fftscope(FFTDATA); % ——-Plot FFT data in figure 1power_fftscope(FFTDATA)","categories":[],"tags":[{"name":"SIMULINK","slug":"SIMULINK","permalink":"http://blog.sharktale.xyz/tags/SIMULINK/"}]}],"categories":[],"tags":[{"name":"Hexo;git","slug":"Hexo-git","permalink":"http://blog.sharktale.xyz/tags/Hexo-git/"},{"name":"SIMULINK","slug":"SIMULINK","permalink":"http://blog.sharktale.xyz/tags/SIMULINK/"}]}